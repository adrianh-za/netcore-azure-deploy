name: Build and deploy API to Azure

# Controls when the action will run.
on:
  push:
    branches:
      - main

# Workflow of the pipeline
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}

    steps:
      - name: Checkout code
        id: github
        uses: actions/checkout@v3

      - name: Setup WebApi .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Configure Azure Container Service
        uses: azure/docker-login@v2
        with:
          login-server: ${{ vars.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: SHA of the commit
        id: vars
        run: |
          calculatedSHA=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=short_sha::$calculatedSHA"

      - name: Build and push Docker image to Azure Container Service
        env:
          ACR_REGISTRY: ${{ vars.ACR_REGISTRY }}
          IMAGE_NAME: ${{ steps.vars.outputs.short_sha }}
        run: |
          docker build -f FormulaOne.Dockerfile -t $ACR_REGISTRY/f1app:$IMAGE_NAME -t $ACR_REGISTRY/f1app:latest .
          docker push $ACR_REGISTRY/f1app --all-tags



  deploy-container-to-ACS:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and deploy to Azure Container Service
        uses: azure/container-apps-deploy-action@v1
        env:
          IMAGE_TAG: ${{ needs.build-and-deploy.outputs.short_sha }}
          ACR_SERVER: ${{ vars.ACR_REGISTRY }}
        with:
          registryUrl: ${{ vars.ACR_REGISTRY }}
          imageToDeploy: $ACR_SERVER/f1app:$IMAGE_TAG
          targetPort: 8080
          ingress: external
          containerAppName: f1appdev
          containerAppEnvironment: f1envdev
          resourceGroup: f1-rg
          environment: |
            ASPNETCORE_ENVIRONMENT=Development ASPNETCORE_URLS=http://*:8080